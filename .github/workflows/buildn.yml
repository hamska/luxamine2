name: Build Luxamine APK (Self-Hosted Debug)

on:
  workflow_dispatch:
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: self-hosted
    timeout-minutes: 60
    env:
      P4A_NO_ANDROID_DOWNLOAD: "1"
      ANDROIDSDK: /opt/android-sdk
      ANDROIDNDK: /opt/android-sdk/ndk/25.1.8937393

    steps:
    - name: Checkout code (do NOT clean .buildozer)
      uses: actions/checkout@v4
      with:
        clean: false

    - name: System info
      run: |
        echo "üîç System Information:"
        whoami; pwd
        echo "HOME=$HOME"
        df -h; free -h

    - name: Install system dependencies
      run: |
        sudo apt-get update -qq
        sudo apt-get install -y \
          python3 python3-pip python3-dev python3-venv \
          openjdk-11-jdk \
          build-essential git wget unzip zip \
          libffi-dev libssl-dev \
          zlib1g-dev libbz2-dev libreadline-dev libsqlite3-dev \
          libncurses5-dev libncursesw5-dev xz-utils tk-dev \
          liblzma-dev python3-openssl \
          autotools-dev autoconf pkg-config cmake \
          libtool automake

    - name: Setup Java 11
      run: |
        echo "JAVA_HOME=/usr/lib/jvm/java-11-openjdk-amd64" >> $GITHUB_ENV
        echo "/usr/lib/jvm/java-11-openjdk-amd64/bin" >> $GITHUB_PATH
        java -version

    - name: Install Android SDK + NDK (25b)
      run: |
        sudo mkdir -p /opt/android-sdk
        sudo chown $USER:$USER /opt/android-sdk
        cd /tmp
        wget -q https://dl.google.com/android/repository/commandlinetools-linux-9477386_latest.zip -O cmdline-tools.zip
        unzip -q -o cmdline-tools.zip
        mkdir -p /opt/android-sdk/cmdline-tools
        rm -rf /opt/android-sdk/cmdline-tools/latest || true
        mv cmdline-tools /opt/android-sdk/cmdline-tools/latest

        yes | /opt/android-sdk/cmdline-tools/latest/bin/sdkmanager --licenses
        /opt/android-sdk/cmdline-tools/latest/bin/sdkmanager \
          "platform-tools" \
          "platforms;android-33" \
          "build-tools;33.0.2" \
          "ndk;25.1.8937393"

        echo "/opt/android-sdk/cmdline-tools/latest/bin" >> $GITHUB_PATH
        echo "/opt/android-sdk/platform-tools" >> $GITHUB_PATH

    - name: Setup Python + Buildozer
      run: |
        python3 --version
        pip3 --version
        pip3 install --upgrade pip
        pip3 install "setuptools<70" "packaging<24" wheel
        pip3 install buildozer==1.5.0 cython==0.29.33
        echo "$HOME/.local/bin" >> $GITHUB_PATH

    - name: Debug PATH & tools
      run: |
        echo "PATH=$PATH"
        which buildozer || { echo "‚ùå buildozer not found"; exit 1; }
        which zip || { echo "‚ùå zip not found"; exit 1; }
        which javac || { echo "‚ùå javac not found"; exit 1; }
        echo "ANDROIDSDK=$ANDROIDSDK"
        echo "ANDROIDNDK=$ANDROIDNDK"
        ls -la $ANDROIDSDK || true
        ls -la $ANDROIDNDK || true

    - name: Create buildozer.spec if missing
      run: |
        if [ ! -f "buildozer.spec" ]; then
          cat > buildozer.spec << 'EOF'
        [app]
        title = Luxamine
        package.name = luxamine
        package.domain = com.luxamine.editor
        source.dir = .
        version = 1.0
        requirements = python3,kivy
        orientation = portrait

        android.api = 33
        android.minapi = 21
        android.ndk = 25b
        android.archs = arm64-v8a,armeabi-v7a
        android.accept_sdk_license = True
        android.permissions = WRITE_EXTERNAL_STORAGE,READ_EXTERNAL_STORAGE

        [buildozer]
        log_level = 2
        warn_on_root = 1
        EOF
        fi

    - name: Build APK (force update source, keep cache)
      run: |
        set -e
        echo "üöÄ Starting APK build..."
        # Forcer la copie du code source mais garder le cache compil√©
        rm -rf .buildozer/android/app || true
        if buildozer android debug --forcebuild --verbose 2>&1 | tee build.log; then
          echo "‚úÖ Build successful"
        else
          echo "‚ùå Build failed ‚Äî last 120 lines:"
          tail -120 build.log || true
          exit 1
        fi

    - name: Verify APK creation
      run: |
        echo "üì¶ APKs:"
        find . -name "*.apk" -type f -printf "%p\t%k KB\n" | sort
        if compgen -G "bin/*.apk" > /dev/null; then
          APK_FILE=$(ls -1t bin/*.apk | head -1)
          echo "APK_FILE=$APK_FILE" >> $GITHUB_ENV
          echo "APK_SIZE=$(du -h "$APK_FILE" | cut -f1)" >> $GITHUB_ENV
          echo "‚úÖ Found: $APK_FILE"
        else
          echo "‚ùå No APK produced"
          exit 1
        fi

    - name: Upload APK artifact
      uses: actions/upload-artifact@v4
      with:
        name: luxamine-apk-debug-${{ github.run_number }}
        path: ${{ env.APK_FILE }}
        retention-days: 30
